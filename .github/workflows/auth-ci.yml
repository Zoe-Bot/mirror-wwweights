name: auth-service-pipeline

on:
  push:
    paths:
      - 'auth/**'
      - '.github/workflows/**.yml'
  pull_request:
    branches: [main]
    paths:
      - 'auth/**'
      - '.github/workflows/**.yml'

jobs:
  setup:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: auth 
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: install npm dependencies
        run: npm ci --no-audit --cache ~/.npm

      - name: Cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('package-lock.json') }}

  tests:
    runs-on: ubuntu-latest
    needs: setup
    defaults:
      run:
        shell: bash
        working-directory: auth 
    steps:
     
     - name: Checkout repository
       uses: actions/checkout@v3

     - name: Load cache
       id: cache
       uses: actions/cache@v3
       with:
         path: ~/.npm
         key: node-modules-${{ hashFiles('package-lock.json') }}

     - name: node modules
       run: npm ci --audit:false --cache ~/.npm --prefer-offline

     - name: end 2 end tests
       run: npm run test:e2e
       
     - name: unit tests
       run: npm run test

  docker-build:
    runs-on: ubuntu-latest
    needs: tests 
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./auth
          tags: auth:pipeline_internal
          outputs: type=docker,dest=/tmp/auth-image.tar
       
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: auth-image
          path: /tmp/auth-image.tar

  docker-push:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: auth-image 
          path: /tmp
      
      - name: Load Docker image
        run: docker load --input /tmp/auth-image.tar
     
        # Extract branch name and replace / with _ as slashes are invalid as image tags
      - name: Extract branch name
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr '/' '_')"
        id: extract_branch
  
      - name: tag docker image
        run: docker tag auth:pipeline_internal ghcr.io/world-wide-weights/auth:${{ steps.extract_branch.outputs.branch }}

      - name: Login to Packages Container registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io 
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: push
        run: docker push ghcr.io/world-wide-weights/auth:${{ steps.extract_branch.outputs.branch }}
