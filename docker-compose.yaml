version: "3.9"
services:
  backend:
    image: node:18-alpine3.15
    restart: "always"
    volumes:
      - ./backend:/home/node
    ports:
      - 3001:3000
    working_dir: /home/node
    command: npm run start:dev
    depends_on:
      - mongodb
  frontend:
    image: node:18-alpine3.15
    restart: "always"
    volumes:
      - ./frontend:/home/node
    ports:
      - 3000:3000
    working_dir: /home/node
    command: npm run dev
    environment:
      - WATCHPACK_POLLING=true
  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_MONGO_PW}
      MONGO_INITDB_DATABASE: ${DB_MONGO_NAME}
    ports:
      - 27018:27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    volumes:
      - mongodb_data_container:/data/mongodb
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    restart: 'always'
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT:-2181} 
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME:-2000} 
      ALLOW_ANONYMOUS_LOGIN: yes 
    ports:
      - 3006:${ZOOKEEPER_CLIENT_PORT:-2181}
  kafka:
    image: bitnami/kafka:3.3.1  
    restart: "always"
    depends_on: 
      - zookeeper
    links:
      - zookeeper 
    volumes:
      - kafka_data_container:/data/kafka
    ports:
      - 3007:29092
    environment:
      KAFKA_BROKER_ID: 1 #Hardcoded as this should not change in local setup
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_CLIENT_PORT:-2181}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_LOG_RETENTION_HOURS: -1
      KAFKA_LOG_RETENTION_BYTES: -1





volumes:
  mongodb_data_container:
  kafka_data_container:
